name: build-and-test

env:
  configuration: release
  project_file: kaprekars.constant.core/kaprekars.constant.core.csproj
  project_test_file: kaprekars.constant.tests/kaprekars.constant.tests.csproj
  output_path: app/publish

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: restore
      run: dotnet restore ${{ env.project_file }}
      
    - name: build
      run: dotnet build -c ${{ env.configuration }} ${{env.project_file }} --no-restore 

    - name: publish
      run: dotnet publish -c ${{ env.configuration }} -o ${{ env.output_path }}

    - name: docker build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: gkama/kaprekars-constant:latest

  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    
    - name: test
      run: dotnet test -c ${{ env.configuration }} ${{ env.project_test_file }} -l trx -v normal --no-build

    - name: cache sonarcloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: cache sonarcloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: install sonarcloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir .\.sonar\scanner
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: build and analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd .\.sonar\scanner
        dotnet-sonarscanner begin /k:"gkama_kaprekars-constant" /o:"gkama" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build -c ${{ env.configuration }}
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"